'use client';

import React from 'react';
import Link from 'next/link';
import { usePathname } from 'next/navigation';
import { useAuthStore } from '@/store/authStore';
import { Button } from '@/components/ui/button';
import { ThemeToggle } from '@/components/theme-toggle';
import { 
  FileText, 
  Calendar, 
  User, 
  LogOut,
  Home
} from 'lucide-react';

const NavigationBar: React.FC = () => {
  const pathname = usePathname();
  const { user, isAuthenticated, logout } = useAuthStore();

  // 로그인 페이지에서는 네비게이션 바를 숨김
  if (pathname === '/login') {
    return null;
  }

  const navigationItems = [
    {
      href: '/',
      icon: Home,
      label: '홈',
    },
    {
      href: '/weekly-reports',
      icon: Calendar,
      label: '위클리 보고서',
    },
    {
      href: '/profile',
      icon: User,
      label: '프로필',
    },
  ];

  const isActive = (href: string) => {
    if (href === '/') {
      return pathname === '/';
    }
    return pathname.startsWith(href);
  };

  const handleLogout = () => {
    logout();
  };

  return (
    <nav className="border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 sticky top-0 z-50">
      <div className="container flex h-16 items-center justify-between">
        {/* 로고 */}
        <Link href="/" className="flex items-center space-x-2">
          <FileText className="h-6 w-6" />
          <span className="font-bold text-xl">YAXIM</span>
        </Link>

        {/* 네비게이션 메뉴 */}
        {isAuthenticated && (
          <div className="flex items-center space-x-1">
            {navigationItems.map((item) => {
              const Icon = item.icon;
              return (
                <Link key={item.href} href={item.href}>
                  <Button
                    variant={isActive(item.href) ? "default" : "ghost"}
                    size="sm"
                    className="flex items-center space-x-2"
                  >
                    <Icon className="h-4 w-4" />
                    <span className="hidden sm:inline">{item.label}</span>
                  </Button>
                </Link>
              );
            })}
          </div>
        )}

        {/* 우측 액션 */}
        <div className="flex items-center space-x-2">
          <ThemeToggle />
          
          {isAuthenticated && user && (
            <div className="flex items-center space-x-2">
              <span className="text-sm text-muted-foreground hidden sm:inline">
                {user.name || user.email}
              </span>
              <Button
                variant="ghost"
                size="sm"
                onClick={handleLogout}
                className="flex items-center space-x-1"
              >
                <LogOut className="h-4 w-4" />
                <span className="hidden sm:inline">로그아웃</span>
              </Button>
            </div>
          )}
        </div>
      </div>
    </nav>
  );
};

export default NavigationBar;
